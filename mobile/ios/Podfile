# Resolve react_native_pods.rb with node to allow for hoisting
def node_require(script)
  node_modules_path = File.expand_path('../../node_modules', __dir__)
  require Pod::Executable.execute_command('node', [
    '-p',
    "require.resolve('#{script}', {paths: ['#{node_modules_path}']})"
  ]).strip
end

node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')


platform :ios, min_ios_version_supported
prepare_react_native_project!

setup_permissions([
  'AppTrackingTransparency',
  'Notifications',
])

# Optional: choose dynamic/static via env var
linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  # use_frameworks! :linkage => linkage.to_sym
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true
end

abstract_target 'SharedPods' do

  pod 'GoogleUtilities', :modular_headers => true
  
  target 'pomoAI' do
    config = use_native_modules!
    

    # Firebase dependencies
    pod 'Firebase', :modular_headers => true
    pod 'FirebaseAuth', :modular_headers => true
    pod 'FirebaseCore', :modular_headers => true
    pod 'FirebaseCrashlytics', :modular_headers => true
    pod 'FirebaseCoreExtension', :modular_headers => true
    pod 'FirebaseInstallations', :modular_headers => true
    pod 'GoogleDataTransport', :modular_headers => true
    pod 'nanopb', :modular_headers => true
    pod 'FirebaseSessions', :modular_headers => true
    pod 'FirebaseAuthInterop', :modular_headers => true
    pod 'FirebaseAppCheckInterop', :modular_headers => true
    pod 'RecaptchaInterop', :modular_headers => true

    # # Reanimated
    # pod 'RNReanimated', :path => '../node_modules/react-native-reanimated'

    use_react_native!(
      :path => config[:reactNativePath],
      :hermes_enabled => true,
      :fabric_enabled => false,
      :app_path => "#{Pod::Config.instance.installation_root}/.."
    )

    post_install do |installer|
      react_native_post_install(
        installer,
        config[:reactNativePath],
        :mac_catalyst_enabled => false
      )
  
      installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
          config.build_settings['SWIFT_VERSION'] = '5.0'
         
          # ✅ Fix: arm64 simulator
          config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
          if ['FirebaseAuth', 'FirebaseCore', 'FirebaseInstallations', 'FirebaseMessaging'].include? target.name
            config.build_settings['DEFINES_MODULE'] = 'YES'
          end

          # ✅ Hermes debugger support
          if target.name == 'hermes-engine'
            config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
            config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'HERMES_ENABLE_DEBUGGER=1'
            config.build_settings['OTHER_CFLAGS'] ||= ['$(inherited)']
            config.build_settings['OTHER_CFLAGS'] << '-DRCT_NO_INSPECTOR=1'
          end

          # ✅ Reanimated: c++17
          if target.name == 'RNReanimated'
            config.build_settings['C++_STANDARD'] = 'c++17'
          end
        end
      end
    end
  end

  target 'ImageNotification' do
    # ⚠️ SDWebImage yêu cầu modular_headers để tránh cảnh báo header conflict
    use_modular_headers!
    pod 'Firebase/Messaging'
    pod 'SDWebImage'
  end
end
